name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm install
      
    - name: Run unit tests
      run: npm run test:unit
      
    - name: Run linting
      run: npm run lint
      
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      if: success()
      with:
        file: ./coverage/lcov.info
        flags: unit
        name: unit-tests

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: unit-tests
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm install
      
    - name: Start LocalStack
      run: |
        docker-compose up -d
        timeout 60 bash -c 'until curl -s http://localhost:4566/health > /dev/null; do sleep 2; done'
        
    - name: Deploy resources
      run: ./scripts/deploy.sh
      
    - name: Run integration tests
      run: npm run test:integration
      
    - name: Stop LocalStack
      if: always()
      run: docker-compose down

  e2e-tests:
    name: End-to-End Tests
    runs-on: ubuntu-latest
    needs: unit-tests
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm install
      
    - name: Start LocalStack
      run: |
        docker-compose up -d
        timeout 60 bash -c 'until curl -s http://localhost:4566/health > /dev/null; do sleep 2; done'
        
    - name: Deploy resources
      run: ./scripts/deploy.sh
      
    - name: Run end-to-end tests
      run: npm run test:e2e
      
    - name: Stop LocalStack
      if: always()
      run: docker-compose down

  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests, e2e-tests]
    if: always()
    
    steps:
    - name: Check test results
      run: |
        echo "Unit Tests: ${{ needs.unit-tests.result }}"
        echo "Integration Tests: ${{ needs.integration-tests.result }}"
        echo "E2E Tests: ${{ needs.e2e-tests.result }}"
        
        if [[ "${{ needs.unit-tests.result }}" == "success" && "${{ needs.integration-tests.result }}" == "success" && "${{ needs.e2e-tests.result }}" == "success" ]]; then
          echo "All tests passed! ✅"
          exit 0
        else
          echo "Some tests failed! ❌"
          exit 1
        fi
